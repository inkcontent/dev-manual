Hello world
===========

.. code:: js

    import INKAPI from './inkapi.js'

    INKAPI.ready(() => {
        const Editor = INKAPI.editor;
        const IO = INKAPI.io;
        const UI = INKAPI.ui;

        UI.Menu.addMenuItem({ File: { Export: 'as hw' } }, doExport);
        async function doExport() {
            const text = await Editor.getText();
            const converted = 'Hello World \n\n\n' + text;

            IO.saveFile(converted, '*.hw');
        }

    });




RST Formatting examples below
=============================

.. note::

    This is an example of a not

.. warning::

    This is a warning


Title 2
-------------

Title 3
^^^^^^^^^^^^^


Title 4
~~~~~~~~~~

.. csv-table::
    :widths: 1, 2

    **field** : type, Description.
    **platform** : string |ro|, "Operating system. One of ``windows``, ``macos``, ``linux`` or ``unix``
    (for any other UNIX-like system)."
    **arch** : string |ro|, "Processor architecture. One of ``x64``, ``x86`` or ``unknown``."


Another Title 4
~~~~~~~~~~~~~~~~

+-------------+-----------------------------------------------------------------+
| **Windows** | | :file:`C:/Users/<USER>/AppData/Local/INK/extensions/`         |
+-------------+-----------------------------------------------------------------+
| **macOS**   | | :file:`~/Library/Preferences/INK/extensions/`                 |
+-------------+-----------------------------------------------------------------+
| **Linux**   | | :file:`~/.config/INK/extensions/`                             |
+-------------+-----------------------------------------------------------------+



Functions descriptions
~~~~~~~~~~~~~~~~~~~~~~

INKAPI.io.saveFile(content:<string|blob>, ext:string)
    Function description goes here.

    You can use ``formatting`` in functions' descriptions.

INKAPI.io.saveFile(content:<string|blob>, ext:string)
    Function description goes here.

    You can use ``formatting`` in functions' descriptions.

